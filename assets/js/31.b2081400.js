(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{347:function(s,a,n){"use strict";n.r(a);var t=n(1),e=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"数据挖掘知识清单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据挖掘知识清单"}},[s._v("#")]),s._v(" 数据挖掘知识清单")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://api2.mubu.com/v3/document_image/86008182-3d82-4fad-a48b-910ef1124613-1184015.jpg",alt:""}})]),s._v(" "),a("p",[s._v("第一天先学基础知识，再开车上路")]),s._v(" "),a("h2",{attrs:{id:"数据挖掘基本流程-6-步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据挖掘基本流程-6-步骤"}},[s._v("#")]),s._v(" 数据挖掘基本流程 - 6 步骤")]),s._v(" "),a("div",{staticClass:"language-markdown line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   商业理解 - 目的\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    挖掘不是目的，帮助业务才是目的，从商业的角度理解项目需求，再开始定义挖掘目的")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   数据理解 - 初步认知\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    收集、探索数据，包含数据描述、数据质量验证等")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   数据准备 - 收集\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    清洗、数据集成等准备工作")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   模型建立 - 分类\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    利用各种数据挖掘模型，进行优化")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   模型评估 - 商业目标\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    对模型进行评价，并检查模型的每个步骤，确认是否实现了预定的商业目标")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   上线发布 - 知识转化成可用发方式\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    可用是报告、可复用的数据挖掘过程等，数据挖掘结果如果是日常运营的一部分，那么后续监控维护就很重要")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h2",{attrs:{id:"数据挖掘的十大算法-经典"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据挖掘的十大算法-经典"}},[s._v("#")]),s._v(" 数据挖掘的十大算法 - 经典")]),s._v(" "),a("h3",{attrs:{id:"分类算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类算法"}},[s._v("#")]),s._v(" 分类算法")]),s._v(" "),a("div",{staticClass:"language-markdown line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   C4.5/决策树算法\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    投票数最高的算法，十大算法之首，在决策树构造过程中进行剪枝，且可以处理连续属性，也能对不完整的数据进行处理")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   朴素贝叶斯/Naive Bayes\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    基于概率论的原理，主要思想：对于给出未知物体想要进行分类，就需要求解在这个未知物体出现的条件下各个类别出现的概率，哪个最大就认为这个未知物体属于哪个分类")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   SVM/支持向量机（Support Vector Machine）\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    在训练中建立了一个超平面的分类模型。后续会介绍")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   KNN/K 最临近算法（K-Nearest Neighbor）\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    K 临近就是每个样本都可以用它最接近的 K 个邻居来代表，如一个样本，它的 K 个最接近的邻居都属于分类 A，那么这个样本也属于 A")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   Adaboost\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    在训练中建立了一个联合的分类模型，boost 是提升的意思，Adaboost 是个构建分类器的提升算法，它可以让多个弱分类器组成一个强分类器，常用算法")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   CCART/Classification and Regression Trees\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    代表分类和回归树，它构建了两棵树：一颗是分类树，一颗是回归树，和 C4.5 一样，是决策树学习方法")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h3",{attrs:{id:"关联分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关联分析"}},[s._v("#")]),s._v(" 关联分析")]),s._v(" "),a("div",{staticClass:"language-markdown line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   Apriori\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("        是一种挖掘关联规则/association rules 的算法，通过挖掘频繁项集/frequent item sets 来揭示物品之间的关联关系，被广泛应用到商业挖掘和网络安全中。频繁项集是指经常出现在一起的物品的集合，关联规则暗示着两种物品之间可能存在很强的关系。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"聚类算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚类算法"}},[s._v("#")]),s._v(" 聚类算法")]),s._v(" "),a("div",{staticClass:"language-markdown line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   K-Means\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    我想把物体划分成 K 类，假设每个类别里面，都有个‘中心点’即意见领袖，它是这个类别的核心。现在我有一个新点要归类，这时候就只要计算这个新点与 K 个中心点的距离，距离哪个中心点近，就变成哪个类别")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   EM/最大期望算法\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    是求参数的最大似然估计，原理：假设我们想要评估参数 A 和参数 B，在开始状态下二者都是未知的，并且知道了 A 的信息就可以知道 B 的信息，反过来知道了 B 也就知道了 A。可以考虑首先赋予 A 某个初值，以此得到 B 的估值，然后从 B 的估值出发，重新计算 A 的取值，这个过程一直持续到收敛为止，常用于聚类和机器学习中。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"连接分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接分析"}},[s._v("#")]),s._v(" 连接分析")]),s._v(" "),a("div",{staticClass:"language-markdown line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   PageRank\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    被链接次数越多，权重越高")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"数据挖掘的数学原理-本质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据挖掘的数学原理-本质"}},[s._v("#")]),s._v(" 数据挖掘的数学原理 - 本质")]),s._v(" "),a("div",{staticClass:"language-markdown line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[s._v("概率论和数理统计、线代、等等\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   概率论与数理统计\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    条件概率、独立性、随机变量、多维随机变量")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   线代\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    向量、矩阵特征值特征向量，以下是基于矩阵的各种运算的解决方法")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    *   PCA")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    *   SVD")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    *   MF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    *   NMF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   图论\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    社交网络中，人与人的关系，可以用图论上的两个节点进行连接，节点的度可以理解为一个人的朋友数。图论对于网络结构的分析非常有效，在关系挖掘和图像分割中有重要作用。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v("   最优化方法\n\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    相当于机器学习中的自我学习过程，最优化方法就是用更短的时间得到收敛，取得更好的效果")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);
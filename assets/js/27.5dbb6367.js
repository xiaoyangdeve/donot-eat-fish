(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{353:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1、olap是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、olap是什么"}},[t._v("#")]),t._v(" 1、OLAP是什么")]),t._v(" "),s("p",[t._v("OLAP（Online Analytical Processing）是一种用于分析和查询大规模数据的技术和方法。它是一种基于多维数据模型的分析方法，通过对多维数据集进行快速、灵活的查询和汇总，支持复杂的数据分析和决策支持。")]),t._v(" "),s("p",[t._v("OLAP技术通常用于处理和分析大量的事实数据（例如销售数据、金融数据、客户数据等）以及与这些数据相关的维度信息（例如时间、地理位置、产品类别等）。它可以提供多维数据的直观可视化，帮助用户发现数据中的模式、趋势和关联。")]),t._v(" "),s("p",[t._v("OLAP的主要特点包括：")]),t._v(" "),s("ol",[s("li",[t._v("多维数据模型：OLAP使用多维数据模型来组织和表示数据，通常采用星型模型或雪花模型。多维数据模型将数据组织为维度和度量值的交叉点，方便进行灵活的分析和查询。")]),t._v(" "),s("li",[t._v("多维数据查询：OLAP提供丰富的查询和分析功能，例如切片（Slicing）、切块（Dicing）、旋转（Pivoting）和钻取（Drill-Down/Up），支持多个维度的组合和数据的深入分析。")]),t._v(" "),s("li",[t._v("高性能和快速响应：OLAP引擎采用预计算和聚合的方式，在查询时能够快速响应，即使在处理大规模数据集时也能提供高性能的分析能力。")]),t._v(" "),s("li",[t._v("可视化和报表：OLAP技术通常与可视化工具和报表生成工具结合使用，可以创建交互式的数据报表和图表，直观地展示数据分析结果。")]),t._v(" "),s("li",[t._v("决策支持：OLAP提供丰富的数据分析和查询能力，支持用户进行复杂的数据挖掘、趋势分析、预测和决策支持。")])]),t._v(" "),s("p",[s("strong",[t._v("OLAP和用户行为分析是在不同层面上对数据进行分析的方法。OLAP通过多维数据模型和数据聚合提供了全局的数据视角，而用户行为分析则关注特定的用户行为数据，通过深入分析用户行为路径和行为模式来获得洞察和决策支持")]),t._v("。两者可以结合使用，相互补充，以提供全面的数据分析和决策支持能力。")]),t._v(" "),s("h2",{attrs:{id:"_2、我们的现状"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、我们的现状"}},[t._v("#")]),t._v(" 2、我们的现状")]),t._v(" "),s("p",[t._v("目前我们建设了我们自己的用户行为分析系统（UBA）。在该系统里我们提供了事件分析、漏斗分析、会话分析功能模块。在我们的用户行为分析系统上线运行半年以上的时间里，我们收到"),s("strong",[t._v("最多的反馈就是查询速度很慢")]),t._v("，一个稍稍复杂的查询就会等待几分钟甚至十几分钟。在遇到大规模的查询和并行查询的时候，甚至会出现等待超过半小时或者直接失败的情况，这对业务获取数据带来很大的门槛，也使得用户的粘性低甚至流失，最终"),s("strong",[t._v("影响数据促进业务转化带来价值提升。")])]),t._v(" "),s("p",[t._v("UBA现有架构：")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/01_olap_uba_now.png",width:"80%"}})]),t._v(" "),s("ol",[s("li",[t._v("在现有的技术架构下，使用Spark程序使用元数据将埋点和业务维度数据加工成大宽表存储在数据湖Iceberg中；")]),t._v(" "),s("li",[t._v("独立于Iceberg湖外部署了一套Trino查询集群用作ad-hoc，用作UBA系统实现对湖内数据进行访问；")]),t._v(" "),s("li",[t._v("UBA系统通过用户的配置，生成对应的查询请求提交至数据中台的one-service服务；")]),t._v(" "),s("li",[t._v("one-service解析请求并生成相应SQL通过Trino对湖内数据进行加载计算，同时对结果进行缓存。")])]),t._v(" "),s("p",[t._v("当UBA系统发起的查询请求未能命中one-service的缓存时，将由one-service向Trino发起一次查询请求。Trino需要从Iceberg中读取数据，然后将符合条件的数据全部加载到内存中进行计算，这需要很大的网络和内存开销。后续将采用行业内比较多的实现是以"),s("strong",[t._v("Trino+Alluxio")]),t._v("的形式来降低直接对湖内数据进行访问的情况。")]),t._v(" "),s("h2",{attrs:{id:"_3、行业经验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、行业经验"}},[t._v("#")]),t._v(" 3、行业经验")]),t._v(" "),s("p",[t._v("由于OLAP分为MOLAP、ROLAP、HOLAP，对应的技术组件和实现方式也有多种，比如：Hive、SparkSQL、FlinkSQL、Clickhouse、Elasticsearch、Druid、Kylin、Presto（Trino）、Impala、Doris等，我们这里主要调研了使用 Apache Doris 和 ClickHouse 两款市面上最常见的开源 OLAP 引擎的头部企业。")]),t._v(" "),s("h3",{attrs:{id:"_3-1-叮咚买菜"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-叮咚买菜"}},[t._v("#")]),t._v(" 3.1 叮咚买菜")]),t._v(" "),s("p",[t._v("叮咚买菜目前已经将 OLAP 引擎统一为 Apache Doris 广泛应用于业务场景中，我们将 Doris 集群拆分成了四个集群，分别"),s("strong",[t._v("支持核心报表、行为分析与算法应用、B/C 端业务和实时数据仓库")]),t._v("，根据不同业务场景的业务量及数据规模，集群的资源配置也不尽相同。目前总的机器规模达数十台，以行为分析场景为例，"),s("strong",[t._v("单个集群近 20 个节点、")]),t._v(" "),s("strong",[t._v("存储数据量超过百 TB，每日新增数据量达数十亿条")]),t._v(" "),s("strong",[t._v("。")])]),t._v(" "),s("p",[t._v("在其整体架构中，各个组件承载着特定的功能，Elasticsearch 主要负责存储标签系统的数据，HBase 是实时数仓的维表层，MySQL 用于存储业务系统的数据存储，Kafka 主要存储实时数据，Spark 主要提供 Ad-Hoc 查询的计算集群服务，而 Apache Doris 作为核心的 OLAP 引擎支持复杂地分析操作、提供多维的数据视图。")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/02_dingdong_olap_architecture_total.png",width:"80%"}})]),t._v(" "),s("p",[t._v("在数据应用的 OLAP 层中，Doris 应用方案如下图所示：")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/02_dingdong_olap_architecture.png",width:"80%"}})]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("模型创建规范化：")]),t._v(" 采用流程审批的方式进行数据建模，根据具体的业务场景来搭建 Duplicate，Unique Key 和 Aggregate 模型，并按照用户提供的数据量设置合适的 Bucket 数目，做好模型归属关系。")]),t._v(" "),s("li",[s("strong",[t._v("数据入口的统一：")]),t._v(" 数据的流入主要有实时和离线两种，实时数据用 Flink 任务从 Kafka 消费数据，逻辑处理流入 Doris ；离线数据通过 Broker Load 方式从 Hive 中将数据灌入 Doris 中。")]),t._v(" "),s("li",[s("strong",[t._v("服务对外出口的统一：")]),t._v(" 对外服务主要通过两种方式暴露接口，一种是使用 JDBC 直连，上层系统配置 Doris 集群的 FE 的连接信息直连 Doris；另一种是业务通过内部的 One API 服务配置业务接口使用 Doris。")]),t._v(" "),s("li",[s("strong",[t._v("业务 SQL 的优化治理：")]),t._v(" 通过采集 Doris FE 的审计日志，以此来对 SQL 的性能进行分析优化，以及对 Doris 服务进行治理。")])]),t._v(" "),s("h3",{attrs:{id:"_3-2-京东"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-京东"}},[t._v("#")]),t._v(" 3.2 京东")]),t._v(" "),s("p",[t._v("京东在对OLAP组件考量和调研之后，和大多数公司一样选用主流的ClickHouse和Doris作为京东内部主要的OLAP引擎，因为ClickHouse性能、扩展性和稳定性较好，而Doris在可维护性和易用性方面更好，所以在生产中选择了以ClickHouse和Doris搭配的策略。同时，针对开源产品后台功能不强的情况，通过自研管控面来进行集群管理，用户自助式操作，降低了运维成本，降低了用户的使用门槛。")]),t._v(" "),s("h4",{attrs:{id:"_3-2-1-京东搜索"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-京东搜索"}},[t._v("#")]),t._v(" 3.2.1 京东搜索")]),t._v(" "),s("p",[t._v("京东搜索是在2020年5月份引入doris的，"),s("strong",[t._v("规模是30+台BE，线上同时运行着10+个routine load任务，每日新增数据条数在200亿+")]),t._v("，已经成为京东体量最大的doris用户。从结果看，用doris替换flink的窗口计算，既可以提高开发效率，适应维度的变化，同时也可以降低计算资源，用doris充当实时数据仓库的聚合层，并提供统一的接口服务，保证了数据的一致性和安全性。")]),t._v(" "),s("p",[t._v("通过对比开源的几款实时OLAP引擎，我们发现doris和clickhouse能够满足我们的需求，但是clickhouse的并发度太低是个潜在的风险，而且clickhouse的数据导入没有事务支持，无法实现exactly once语义，对标准sql的支持也是有限的。 最终，我们选定doris作为聚合层，用于实时OLAP分析。对于流量数据，使用聚合模型建表；对于订单行，我们使用Uniq模型，保证同一个订单最终只会存储一条记录，从而达到订单行精准去重的目的。在flink处理时，我们也将之前的任务拆解，将反复加工的逻辑封装，每一次处理都生成新的topic流，明细层细分了不同粒度的实时流。")]),t._v(" "),s("p",[t._v("其方案如下：")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/02_jd_search_olap_01.png",width:"80%"}})]),t._v(" "),s("p",[t._v("数据流图如下：")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/02_jd_search_olap_02.png",width:"80%"}})]),t._v(" "),s("h4",{attrs:{id:"_3-2-2-京东零售"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-京东零售"}},[t._v("#")]),t._v(" 3.2.2 京东零售")]),t._v(" "),s("p",[t._v("在京东零售内部采用ClickHouse集群进行高维度分析服务，"),s("strong",[t._v("业务规模百+集群、数千节点、日查询量数亿次、日增数据数千亿条，PB级别")]),t._v("。主要覆盖业务场景：流量分析、用户画像、报表、人群全选、数坊、日志分析、算法推荐。")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/02_jd_sale_olap01.png",width:"80%"}})]),t._v(" "),s("h3",{attrs:{id:"_3-3-小米集团"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-小米集团"}},[t._v("#")]),t._v(" 3.3 小米集团")]),t._v(" "),s("p",[t._v("小米集团内在2019年进行OLAP选型Doris（非向量化，版本低）替换其之前SparkSQL + Kudu + HDFS，在Spark之前是使用的是Kylin。在2022年的时针对OLAP进行二次选型，继续选择了Doris（向量化）进行数据建设。其现有Doris集群有多个，其中最大集群的BE节点有90+，在Doris之上通过kyuubi进行统一的SQL服务。应用的系统有：用户行为分析、A/B实验、用户画像、小米造车、小米有品、新零售、天星数科、广告投放、智能制造等。")]),t._v(" "),s("p",[t._v("小米用户行为分析平台数据流向：")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/02_xiaomi_uba_data_flow01.png",width:"80%"}})]),t._v(" "),s("h3",{attrs:{id:"_3-4-字节跳动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-字节跳动"}},[t._v("#")]),t._v(" 3.4 字节跳动")]),t._v(" "),s("p",[t._v("据说是国内规模最大的ClickHouse用户，其总节点超过万台，数据总量数百PB接近EB。在字节内部有ByteHouse和ByConity，其中ByConity是字节向社区开源的ByteHouse内核。其ByteHouse是字节基于ClickHouse深度二次开发的产品。")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/02_byconity_architecture.png",width:"80%"}})]),t._v(" "),s("p",[t._v("ByConity 相比传统 MPP 架构的亮点概括为以下三点：")]),t._v(" "),s("ul",[s("li",[t._v("首先是存储计算分离的改造。传统 MPP 很难对计算资源做隔离，据翟鹿渊介绍，现在业界大多数使用 ClickHouse 方案的公司和团队，采用的隔离方式基本是靠物理集群隔离，运维管理成本极高。存算分离之外，ByConity 依托于虚拟化容器调度能力，既能实现业务和业务之间的隔离，又能非常灵活地调配硬件资源，这其实是很多公司想解决，但可能只解了一半或者暂时还没有好解决方案的严重问题。")]),t._v(" "),s("li",[t._v("其次是自研的面向 ClickHouse runtime 执行层、与之完全匹配的查询优化器。基于四个大方向（基于规则、基于 cost、基于数据依赖、基于反馈）提供极致优化能力，能极大提高查询性能，特别是在复杂查询场景下能带来数倍至数百倍的性能提升。虽然业界成熟的数仓引擎都会配备查询优化器，但据了解，从 ClickHouse 技术方案衍生出来的查询优化器，目前在业界应该没有第二个方案。")]),t._v(" "),s("li",[t._v("然后是对元数据存储和管理的优化。使用 ClickHouse 比较多的团队可能都会遇到一个问题，随着集群管理的元数据越来越多，ZooKeeper/Keeper 会面临很大的 coordinate 压力，可能出现元数据不一致的问题，轻则查询报错，重则整个集群宕机。这类问题在 ByConity 从系统层面得到了解决。ByConity 基于高性能的分布式 key-value store（FoundationDB）做元数据管理，并在 catalog api 上层实现了完备事务语义（ACID）支持，提供了高效可靠的元数据服务，能够将元数据吞吐拉升到百万级别。")])]),t._v(" "),s("p",[t._v("与ClickHouse的使用区别：")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/02_byconity_architecture_02.png",width:"80%"}})]),t._v(" "),s("h3",{attrs:{id:"_3-5-b站"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-b站"}},[t._v("#")]),t._v(" 3.5 B站")]),t._v(" "),s("p",[t._v("B站于2020年开始引入ClickHouse，结合北极星行为分析场景进行用户行为数据分析服务，B站行为数据每天增量千亿级别，存储日增10T以上。其现有技术为："),s("strong",[t._v("Iceberg全模型化聚合+ClickHouse")])]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/02_bilibili_uba_architecture01.png",width:"80%"}})]),t._v(" "),s("p",[t._v("拥有以下特点：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("全模型聚合：")]),t._v(" 21年中开始我们就设计了一款通用流量聚合模型，可以认为是全信息的hive流量模型结构，除了把时间维度退化外其余信息基本能完整保留，原来千亿级的量级可以压缩为百亿内；")]),t._v(" "),s("li",[s("strong",[t._v("BulkLoad出仓：")]),t._v(" 数据按文件批次从HDFS导入到ClickHouse，千亿级别的数据一小时内可以导完，其原理后文会有介绍；")]),t._v(" "),s("li",[s("strong",[t._v("字典服务升级：")]),t._v(" 我们通过加强版的snowflake+redis+公司自研rockdbKV存储，大大增强了字典服务性能，压测可支持40万QPS；")]),t._v(" "),s("li",[s("strong",[t._v("用户属性现算模式：")]),t._v(" 不再采用预计算模式，而是通过我们另一套基于CK的标签平台所生成的指定用户标签人群跨集群关联现算，这样可以灵活指定想要分析的用户属性。")])]),t._v(" "),s("h2",{attrs:{id:"_4、优化方向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、优化方向"}},[t._v("#")]),t._v(" 4、优化方向")]),t._v(" "),s("h3",{attrs:{id:"_4-1-事件分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-事件分析"}},[t._v("#")]),t._v(" 4.1 事件分析")]),t._v(" "),s("p",[t._v("如之前文章提到过，我们重新设计了流量聚合模型同时配套相应的udf函数来支持事件分析。事件分析的具体验证测试性能如下截图。")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/uba/uba_event_analyse05.png",width:"80%"}})]),t._v(" "),s("h3",{attrs:{id:"_4-2-漏斗分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-漏斗分析"}},[t._v("#")]),t._v(" 4.2 漏斗分析")]),t._v(" "),s("p",[t._v("在漏斗分析模型中，我们调研了B站等互联网公司的漏斗数据模型设计，设计了我们自己的漏斗模型，具体如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("同udt日期")]),t._v(" "),s("th",[t._v("string")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("设备串号")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("用户ID")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("机型")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("机型名称")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("UI大版本")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("UI二级版本")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("UI三级版本")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("打点应用名")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("数据来源")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("国家-埋点上报")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("省份-埋点上报")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("城市-埋点上报")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("事件版本")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("品牌")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("打点应用名版本")]),t._v(" "),s("td",[t._v("string")])]),t._v(" "),s("tr",[s("td",[t._v("事件列表")]),t._v(" "),s("td",[t._v("array[string]")])]),t._v(" "),s("tr",[s("td",[t._v("事件时间列表，升序")]),t._v(" "),s("td",[t._v("array[string]")])]),t._v(" "),s("tr",[s("td",[t._v("事件时间列表，升序")]),t._v(" "),s("td",[t._v("array[bigint]")])]),t._v(" "),s("tr",[s("td",[t._v("事件属性列表，也包含时间和事件")]),t._v(" "),s("td",[t._v("array[map[string,string]]")])])])]),t._v(" "),s("p",[t._v("其中最重要的字段是事件列表，在漏斗查询分析时执行玩filter动作时，会选取需要进行group by的属性事件列表输入至UDF中进行计算（同一个用户可能会有多个属性列表）。UDF的合并逻辑见附录一，在合并的时候同时进行漏斗序列搜索。")]),t._v(" "),s("p",[t._v("由于将所有事件聚合到一个字段过后，"),s("strong",[t._v("Trino的查询下推失效，会导致大量的数据被加载到内存中进行处理，会造成更大的资源开销")]),t._v("，同时可能会使得Trino在进行数据查询的时候返回"),s("code",[t._v("Remote page is to large")]),t._v("错误，该错误可以通过配置Trino的"),s("code",[t._v("exchange.http-client.max-content-length")]),t._v("来处理，但是在数据量持续增大和时间周期更大的情况下依然会发生该情况。")]),t._v(" "),s("p",[t._v("所以针对漏斗分析，我们分别进行udf函数、udf+聚合模型的对比，其结果分别如下(红色代表性能降低，绿色代表性能提升30%+)：\nudf函数性能测试：")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/03_olap_funnel_udf_compare_res.png",width:"80%"}})]),t._v(" "),s("p",[t._v("udf+模型性能测试：")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/03_olap_funnel_udf_compare_res_02.png",width:"80%"}})]),t._v(" "),s("p",[t._v("综上：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("UDF优化在大部分场景下能带来查询提升（特别是数据量较大的情况下）；")])]),t._v(" "),s("li",[s("p",[t._v("而"),s("strong",[t._v("漏斗聚合模型在Trino的场景下并没有带来查询提升")]),t._v("，而是导致查询降速（根据行业经验该聚合模型往往配合ClickHouse或Doris + Bigmap等算法一起使用），在数据量大的情况下甚至会出现查询失败。")])])]),t._v(" "),s("h3",{attrs:{id:"_4-3-olap组件选型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-olap组件选型"}},[t._v("#")]),t._v(" 4.3 OLAP组件选型")]),t._v(" "),s("p",[t._v("OLAP按存储器的数据存储格式分为ROLAP（Relational OLAP）、MOLAP（Multi-dimensional OLAP）和 HOLAP（Hybrid OLAP）。")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/03_olap_catrgory_01.png",width:"80%"}})]),t._v(" "),s("p",[t._v("Trino在OLAP技术组件属于MPP查询引擎，存算分离设计，本身对数据查询需要大量网络开销，且在并发场景下支持不够友好。基于此我们考虑选择一款MPPDB的技术组件来进一步提升我们的查询响应。")]),t._v(" "),s("h4",{attrs:{id:"_4-3-1-选型关注点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-选型关注点"}},[t._v("#")]),t._v(" 4.3.1 选型关注点")]),t._v(" "),s("p",[t._v("在选型过程中我们主要考虑以下几个方面：")]),t._v(" "),s("ol",[s("li",[t._v("支持标准 SQL，无需投入额外的时间适应和学习新的 SQL 方言、直接用标准 SQL 即可直接查询，最大化降低使用门槛；")]),t._v(" "),s("li",[t._v("支持高并发查询，系统面临多条业务线的同时使用，因此需要有比较强的并行查询能力，以更好满足业务需求；")]),t._v(" "),s("li",[t._v("支持离线和实时导入，可与已有技术栈轻松对接，支持多个数据源或大数据组件的离线和实时导入，以更好适配不同使用场景；")]),t._v(" "),s("li",[t._v("支持大数据量的明细数据查询，以满足不同业务用户灵活多变的分析需求；")]),t._v(" "),s("li",[t._v("数据导入幂等性和事务性支持；")]),t._v(" "),s("li",[t._v("能够支持自定义的UDF开发，可以满足我们产品多样的需求；")]),t._v(" "),s("li",[t._v("支持 Join 操作，方便事实表与维度表进行关联查询，在应对维度更新时具有更高的灵活性、无需对处理后的宽表进行重刷。")])]),t._v(" "),s("p",[t._v("经过测试和对比，Apache Doris 各项能力都比较优异，在我们的大多数业务场景中都需要明细数据级别的查询、高并发的点查和大数据量的 Join，而这几个方面 Apache Doris 相较于 ClickHouse 均更胜一筹，"),s("strong",[s("font",{attrs:{color:"red"}},[t._v("因此我们决定使用 Apache Doris 来搭建新的OLAP架构体系。")])],1)]),t._v(" "),s("h4",{attrs:{id:"_4-3-2-综合对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-综合对比"}},[t._v("#")]),t._v(" 4.3.2 综合对比")]),t._v(" "),s("p",[t._v("优缺点对比")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/03_startdt_olap_compare.png",width:"80%"}})]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("MPPDB")]),t._v(" "),s("th",[t._v("优点")]),t._v(" "),s("th",[t._v("缺点")]),t._v(" "),s("th",[t._v("总结")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Apache Doris")]),t._v(" "),s("td",[t._v("1. Apache Doris 并不依赖于大数据生态，但其外 表联邦查询可兼容大数据生态； "),s("br"),t._v("2. 提供了多种不同模型，能够支持不同维度的数 据建模； "),s("br"),t._v("3. 支持在线弹性扩缩容，可以自动负载均衡； "),s("br"),t._v("4. 支持高并发分析查询，在单表查询及多表 join 方面综合性能均较优；"),s("br"),t._v(" 5. 实时性好，支持数据秒级写入，且支持每一批次导入一次事务；"),s("br"),t._v("6. UDF支持Java和C++语言编写。")]),t._v(" "),s("td",[t._v("1. 周边生态仍需进一步完善； "),s("br"),t._v("2. 部分高级功能不支持，需要手动编写代码实现；"),s("br"),t._v(" 3. 对于非结构化数据的支持不够好")]),t._v(" "),s("td",[t._v("Apache Doris 在数据查询处理性能方面整体表现亮 眼，较好的高并发支持能力，统一元数据管理，运 维成本相对低。但该引擎稳定性略显不足，偶尔会 出现大批量数据操作长时间延时。")])]),t._v(" "),s("tr",[s("td",[t._v("ClickHouse")]),t._v(" "),s("td",[t._v("1. 列式数据库管理系统：写入速度快，在一些其 他系统中也可以将不同的列分别进行存储；"),s("br"),t._v(" 2. 数据压缩："),s("br"),t._v("数据压缩空间大，减少 IO，处理查 询高吞吐量，每台服务器秒级数十亿行；"),s("br"),t._v(" 3. 资源利用率高，适合在线查询；"),s("br"),t._v(" 4. 实时的数据更新，支持近似计算；"),s("br")]),t._v(" "),s("td",[t._v("1. 不支持事务； "),s("br"),t._v("2. 不支持高并发查询场景 ;"),s("br"),t._v(" 3. 不擅长根据主键按行粒度查询 ; "),s("br"),t._v("4. 不擅长 Join; "),s("br"),t._v("5. 不擅长处理可变数据。")]),t._v(" "),s("td",[t._v("ClickHouse在事实表查询、AP计算、数据批量同 步速率性能方面表现亮眼，宽表即席查询优秀，但 宽表 join表现一般，支持统一元数据并且有落地场 景，运维成本相对低。该引擎在并发维度表现较弱， DataX集成速度快，适合大规模批处理计算场景。")])])])]),t._v(" "),s("p",[t._v("以下是京东零售在2021年针对doris和clickhouse的对比，其中一些局限都已经有一些提升。")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/03_olap_doris_compare_ck_by_baidu_2021_01.jpg",width:"80%"}})]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/03_olap_doris_compare_ck_by_baidu_2021_02.jpg",width:"80%"}})]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/03_olap_doris_compare_ck_by_baidu_2021_03.jpg",width:"80%"}})]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/03_olap_doris_compare_ck_by_baidu_2021_04.jpg",width:"80%"}})]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/03_olap_doris_compare_ck_by_baidu_2021_05.jpg",width:"80%"}})]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/03_olap_doris_compare_ck_by_baidu_2021_06.jpg",width:"80%"}})]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/03_olap_doris_compare_ck_by_baidu_2021_07.jpg",width:"80%"}})]),t._v(" "),s("h2",{attrs:{id:"附录一-漏斗有序多序列合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附录一-漏斗有序多序列合并"}},[t._v("#")]),t._v(" 附录一：漏斗有序多序列合并")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 合并 k 个有序序列\n     *\n     * @param inputSeq 输入序列\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeSortSeqK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotNull")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" inputSeq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义一个变量存储指针")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" elementSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义一个 List 存放每个子序列的头部元素，升序排列")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FunnelModelValIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" valList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkedList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化每个子序列的指针和第一个值")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" inputSeq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" subSeq "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" inputSeq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("subSeq "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" subSeq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化每个子序列的指针情况")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FunnelModelSeqMergeIdx")]),t._v(" funnelModelSeqMergeIdx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FunnelModelSeqMergeIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" subSeq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            elementSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" subSeq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            valList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FunnelModelValIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("subSeq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("longValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" funnelModelSeqMergeIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 排序")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collections")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义最终结果序列")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" resList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elementSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加第一个元素")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertPopResValToListAndMoveIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inputSeq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历填值")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" elementSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向结果集种添加元素，操作指针和更新头部比较元素列表")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertPopResValToListAndMoveIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inputSeq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 向结果集添加第一个元素并处理遍历指针和重新弹出元素\n     *\n     * @param curValIdxList 当前头部元素列表\n     * @param resList       结果集\n     * @param resIdx        需要添加的结果集列表\n     * @param inputSeq      输入的 K 个序列\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertPopResValToListAndMoveIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotNull")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FunnelModelValIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" resList\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" resIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" inputSeq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录暂存元素所在序列")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FunnelModelSeqMergeIdx")]),t._v(" eleFunnelModelSeqMergeIdx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFunnelModelSeqMergeIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加第一个元素")]),t._v("\n        resList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 元素所在序列")]),t._v("\n        curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移动指针")]),t._v("\n        eleFunnelModelSeqMergeIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stepForwardIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断当前对应指针是否还有值，有值取出插入 valList")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eleFunnelModelSeqMergeIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkCurIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" popElement "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" inputSeq\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取元素对应的子序列")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eleFunnelModelSeqMergeIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSubSeqIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取元素在子序列的位置")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eleFunnelModelSeqMergeIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将元素添加至valList合适位置")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertFunnelModelValIdxToList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FunnelModelValIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("popElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("longValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eleFunnelModelSeqMergeIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 在有序列表中添加一个元素\n     *\n     * @param curValIdxList     当前有序列表\n     * @param funnelModelValIdx 需要添加的元素\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertFunnelModelValIdxToList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotNull")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FunnelModelValIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FunnelModelValIdx")]),t._v(" funnelModelValIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" valListTempSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 valList为空但还能取出元素")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valListTempSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" funnelModelValIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理只有一个元素且大于需要添加的元素")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valListTempSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" funnelModelValIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" funnelModelValIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" valListTempSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 放在最前面")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" funnelModelValIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" funnelModelValIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相同值添加到最后一个相同元素的后面")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" funnelModelValIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" funnelModelValIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" funnelModelValIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 放在最后面")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" valListTempSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                curValIdxList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" funnelModelValIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br"),s("span",{staticClass:"line-number"},[t._v("67")]),s("br"),s("span",{staticClass:"line-number"},[t._v("68")]),s("br"),s("span",{staticClass:"line-number"},[t._v("69")]),s("br"),s("span",{staticClass:"line-number"},[t._v("70")]),s("br"),s("span",{staticClass:"line-number"},[t._v("71")]),s("br"),s("span",{staticClass:"line-number"},[t._v("72")]),s("br"),s("span",{staticClass:"line-number"},[t._v("73")]),s("br"),s("span",{staticClass:"line-number"},[t._v("74")]),s("br"),s("span",{staticClass:"line-number"},[t._v("75")]),s("br"),s("span",{staticClass:"line-number"},[t._v("76")]),s("br"),s("span",{staticClass:"line-number"},[t._v("77")]),s("br"),s("span",{staticClass:"line-number"},[t._v("78")]),s("br"),s("span",{staticClass:"line-number"},[t._v("79")]),s("br"),s("span",{staticClass:"line-number"},[t._v("80")]),s("br"),s("span",{staticClass:"line-number"},[t._v("81")]),s("br"),s("span",{staticClass:"line-number"},[t._v("82")]),s("br"),s("span",{staticClass:"line-number"},[t._v("83")]),s("br"),s("span",{staticClass:"line-number"},[t._v("84")]),s("br"),s("span",{staticClass:"line-number"},[t._v("85")]),s("br"),s("span",{staticClass:"line-number"},[t._v("86")]),s("br"),s("span",{staticClass:"line-number"},[t._v("87")]),s("br"),s("span",{staticClass:"line-number"},[t._v("88")]),s("br"),s("span",{staticClass:"line-number"},[t._v("89")]),s("br"),s("span",{staticClass:"line-number"},[t._v("90")]),s("br"),s("span",{staticClass:"line-number"},[t._v("91")]),s("br"),s("span",{staticClass:"line-number"},[t._v("92")]),s("br"),s("span",{staticClass:"line-number"},[t._v("93")]),s("br"),s("span",{staticClass:"line-number"},[t._v("94")]),s("br"),s("span",{staticClass:"line-number"},[t._v("95")]),s("br"),s("span",{staticClass:"line-number"},[t._v("96")]),s("br"),s("span",{staticClass:"line-number"},[t._v("97")]),s("br"),s("span",{staticClass:"line-number"},[t._v("98")]),s("br"),s("span",{staticClass:"line-number"},[t._v("99")]),s("br"),s("span",{staticClass:"line-number"},[t._v("100")]),s("br"),s("span",{staticClass:"line-number"},[t._v("101")]),s("br"),s("span",{staticClass:"line-number"},[t._v("102")]),s("br"),s("span",{staticClass:"line-number"},[t._v("103")]),s("br"),s("span",{staticClass:"line-number"},[t._v("104")]),s("br"),s("span",{staticClass:"line-number"},[t._v("105")]),s("br"),s("span",{staticClass:"line-number"},[t._v("106")]),s("br"),s("span",{staticClass:"line-number"},[t._v("107")]),s("br")])]),s("h2",{attrs:{id:"附录二-奇点云评分标准"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附录二-奇点云评分标准"}},[t._v("#")]),t._v(" 附录二：奇点云评分标准")]),t._v(" "),s("center",[s("img",{attrs:{src:"/donot-eat-fish/img/data_analysis/olap/03_startdt_compare_olap_rule.png",width:"80%"}})]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("p",[t._v("[叮咚买菜基于 Apache Doris 统一 OLAP 引擎的应用实践]"),s("a",{attrs:{href:"https://www.modb.pro/db/623342",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.modb.pro/db/623342"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("[B站基于ClickHouse的海量用户行为分析应用实践]"),s("a",{attrs:{href:"https://www.bilibili.com/read/cv21106590?spm_id_from=333.999.0.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.bilibili.com/read/cv21106590?spm_id_from=333.999.0.0"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("[字节跳动开源 ByConity：基于 ClickHouse 的存算分离架构云原生数仓]"),s("a",{attrs:{href:"https://www.infoq.cn/article/vkvhbbzq1obto3wf76sf",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.infoq.cn/article/vkvhbbzq1obto3wf76sf"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("[从 ClickHouse 到 Apache Doris，腾讯音乐内容库数据平台架构演进实践]"),s("a",{attrs:{href:"https://www.infoq.cn/article/nybtjqs07zcrqqnc0xwt",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.infoq.cn/article/nybtjqs07zcrqqnc0xwt"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("[Apache Doris 在小米亿级用户行为分析平台的实践]"),s("a",{attrs:{href:"https://www.infoq.cn/article/it7purpskqapwr8touco",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.infoq.cn/article/it7purpskqapwr8touco"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("[Apache Doris 在京东搜索实时 OLAP 探索与实践]"),s("a",{attrs:{href:"https://doris.apache.org/zh-CN/blog/JD_OLAP/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://doris.apache.org/zh-CN/blog/JD_OLAP/"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("[Doris 与 ClickHouse 的深度对比及选型建议]"),s("a",{attrs:{href:"https://developer.baidu.com/article/detail.html?id=294354",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developer.baidu.com/article/detail.html?id=294354"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("奇点云：OLAP数据库引擎选型白皮书（2023）")])],1)}),[],!1,null,null,null);s.default=e.exports}}]);
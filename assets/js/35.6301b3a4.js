(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{351:function(_,l,v){"use strict";v.r(l);var i=v(1),t=Object(i.a)({},(function(){var _=this,l=_._self._c;return l("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[l("h2",{attrs:{id:"_1、栈和局部变量操作"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1、栈和局部变量操作"}},[_._v("#")]),_._v(" 1、栈和局部变量操作")]),_._v(" "),l("h3",{attrs:{id:"常量压栈-操作数"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#常量压栈-操作数"}},[_._v("#")]),_._v(" 常量压栈(操作数)")]),_._v(" "),l("ul",[l("li",[_._v("aconst_null 将null对象引用压入栈")]),_._v(" "),l("li",[_._v("iconst_m1 将int类型常量-1压入栈")]),_._v(" "),l("li",[_._v("iconst_0 将int类型常量0压入栈")]),_._v(" "),l("li",[_._v("iconst_1 将int类型常量1压入栈")]),_._v(" "),l("li",[_._v("iconst_2 将int类型常量2压入栈")]),_._v(" "),l("li",[_._v("iconst_3 将int类型常量3压入栈")]),_._v(" "),l("li",[_._v("iconst_4 将int类型常量4压入栈")]),_._v(" "),l("li",[_._v("iconst_5 将int类型常量5压入栈")]),_._v(" "),l("li",[_._v("lconst_0 将long类型常量0压入栈")]),_._v(" "),l("li",[_._v("lconst_1 将long类型常量1压入栈")]),_._v(" "),l("li",[_._v("fconst_0 将float类型常量0压入栈")]),_._v(" "),l("li",[_._v("fconst_1 将float类型常量1压入栈")]),_._v(" "),l("li",[_._v("dconst_0 将double类型常量0压入栈")]),_._v(" "),l("li",[_._v("dconst_1 将double类型常量1压入栈")]),_._v(" "),l("li",[_._v("bipush 将一个8位带符号整数压入栈")]),_._v(" "),l("li",[_._v("sipush 将16位带符号整数压入栈")]),_._v(" "),l("li",[_._v("ldc 把常量池中的项压入栈")]),_._v(" "),l("li",[_._v("ldc_w 把常量池中的项压入栈（使用宽索引）")]),_._v(" "),l("li",[_._v("ldc2_w 把常量池中long类型或者double类型的项压入栈（使用宽索引）")])]),_._v(" "),l("h3",{attrs:{id:"从栈中局部变量装载值"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#从栈中局部变量装载值"}},[_._v("#")]),_._v(" 从栈中局部变量装载值")]),_._v(" "),l("ul",[l("li",[_._v("iload 从局部变量中装载int类型值")]),_._v(" "),l("li",[_._v("lload 从局部变量中装载long类型值")]),_._v(" "),l("li",[_._v("fload 从局部变量中装载float类型值")]),_._v(" "),l("li",[_._v("dload 从局部变量中装载double类型值")]),_._v(" "),l("li",[_._v("aload 从局部变量中装载引用类型值（refernce）")]),_._v(" "),l("li",[_._v("iload_0 从局部变量0中装载int类型值")]),_._v(" "),l("li",[_._v("iload_1 从局部变量1中装载int类型值")]),_._v(" "),l("li",[_._v("iload_2 从局部变量2中装载int类型值")]),_._v(" "),l("li",[_._v("iload_3 从局部变量3中装载int类型值")]),_._v(" "),l("li",[_._v("lload_0 从局部变量0中装载long类型值")]),_._v(" "),l("li",[_._v("lload_1 从局部变量1中装载long类型值")]),_._v(" "),l("li",[_._v("lload_2 从局部变量2中装载long类型值")]),_._v(" "),l("li",[_._v("lload_3 从局部变量3中装载long类型值")]),_._v(" "),l("li",[_._v("fload_0 从局部变量0中装载float类型值")]),_._v(" "),l("li",[_._v("fload_1 从局部变量1中装载float类型值")]),_._v(" "),l("li",[_._v("fload_2 从局部变量2中装载float类型值")]),_._v(" "),l("li",[_._v("fload_3 从局部变量3中装载float类型值")]),_._v(" "),l("li",[_._v("dload_0 从局部变量0中装载double类型值")]),_._v(" "),l("li",[_._v("dload_1 从局部变量1中装载double类型值")]),_._v(" "),l("li",[_._v("dload_2 从局部变量2中装载double类型值")]),_._v(" "),l("li",[_._v("dload_3 从局部变量3中装载double类型值")]),_._v(" "),l("li",[_._v("aload_0 从局部变量0中装载引用类型值")]),_._v(" "),l("li",[_._v("aload_1 从局部变量1中装载引用类型值")]),_._v(" "),l("li",[_._v("aload_2 从局部变量2中装载引用类型值")]),_._v(" "),l("li",[_._v("aload_3 从局部变量3中装载引用类型值")]),_._v(" "),l("li",[_._v("iaload 从数组中装载int类型值")]),_._v(" "),l("li",[_._v("laload 从数组中装载long类型值")]),_._v(" "),l("li",[_._v("faload 从数组中装载float类型值")]),_._v(" "),l("li",[_._v("daload 从数组中装载double类型值")]),_._v(" "),l("li",[_._v("aaload 从数组中装载引用类型值")]),_._v(" "),l("li",[_._v("baload 从数组中装载byte类型或boolean类型值")]),_._v(" "),l("li",[_._v("caload 从数组中装载char类型值")]),_._v(" "),l("li",[_._v("saload 从数组中装载short类型值")])]),_._v(" "),l("h3",{attrs:{id:"将栈中-操作数-的值存入局部变量的指令"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#将栈中-操作数-的值存入局部变量的指令"}},[_._v("#")]),_._v(" 将栈中（操作数）的值存入局部变量的指令")]),_._v(" "),l("ul",[l("li",[_._v("istore 将int类型值存入局部变量")]),_._v(" "),l("li",[_._v("lstore 将long类型值存入局部变量")]),_._v(" "),l("li",[_._v("fstore 将float类型值存入局部变量")]),_._v(" "),l("li",[_._v("dstore 将double类型值存入局部变量")]),_._v(" "),l("li",[_._v("astore 将将引用类型或returnAddress类型值存入局部变量")]),_._v(" "),l("li",[_._v("istore_0 将int类型值存入局部变量0")]),_._v(" "),l("li",[_._v("istore_1 将int类型值存入局部变量1")]),_._v(" "),l("li",[_._v("istore_2 将int类型值存入局部变量2")]),_._v(" "),l("li",[_._v("istore_3 将int类型值存入局部变量3")]),_._v(" "),l("li",[_._v("lstore_0 将long类型值存入局部变量0")]),_._v(" "),l("li",[_._v("lstore_1 将long类型值存入局部变量1")]),_._v(" "),l("li",[_._v("lstore_2 将long类型值存入局部变量2")]),_._v(" "),l("li",[_._v("lstore_3 将long类型值存入局部变量3")]),_._v(" "),l("li",[_._v("fstore_0 将float类型值存入局部变量0")]),_._v(" "),l("li",[_._v("fstore_1 将float类型值存入局部变量1")]),_._v(" "),l("li",[_._v("fstore_2 将float类型值存入局部变量2")]),_._v(" "),l("li",[_._v("fstore_3 将float类型值存入局部变量3")]),_._v(" "),l("li",[_._v("dstore_0 将double类型值存入局部变量0")]),_._v(" "),l("li",[_._v("dstore_1 将double类型值存入局部变量1")]),_._v(" "),l("li",[_._v("dstore_2 将double类型值存入局部变量2")]),_._v(" "),l("li",[_._v("dstore_3 将double类型值存入局部变量3")]),_._v(" "),l("li",[_._v("astore_0 将引用类型或returnAddress类型值存入局部变量0")]),_._v(" "),l("li",[_._v("astore_1 将引用类型或returnAddress类型值存入局部变量1")]),_._v(" "),l("li",[_._v("astore_2 将引用类型或returnAddress类型值存入局部变量2")]),_._v(" "),l("li",[_._v("astore_3 将引用类型或returnAddress类型值存入局部变量3")]),_._v(" "),l("li",[_._v("iastore 将int类型值存入数组中")]),_._v(" "),l("li",[_._v("lastore 将long类型值存入数组中")]),_._v(" "),l("li",[_._v("fastore 将float类型值存入数组中")]),_._v(" "),l("li",[_._v("dastore 将double类型值存入数组中")]),_._v(" "),l("li",[_._v("aastore 将引用类型值存入数组中")]),_._v(" "),l("li",[_._v("bastore 将byte类型或者boolean类型值存入数组中")]),_._v(" "),l("li",[_._v("castore 将char类型值存入数组中")]),_._v(" "),l("li",[_._v("sastore 将short类型值存入数组中")]),_._v(" "),l("li",[_._v("wide指令")]),_._v(" "),l("li",[_._v("wide 使用附加字节扩展局部变量索引")])]),_._v(" "),l("h3",{attrs:{id:"通用-无类型-栈操作"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#通用-无类型-栈操作"}},[_._v("#")]),_._v(" 通用(无类型）栈操作")]),_._v(" "),l("ul",[l("li",[_._v("nop 不做任何操作")]),_._v(" "),l("li",[_._v("pop 弹出栈顶端一个字长的内容")]),_._v(" "),l("li",[_._v("pop2 弹出栈顶端两个字长的内容")]),_._v(" "),l("li",[_._v("dup 复制栈顶部一个字长内容")]),_._v(" "),l("li",[_._v("dup_x1 复制栈顶部一个字长的内容，然后将复制内容及原来弹出的两个字长的内容压入栈")]),_._v(" "),l("li",[_._v("dup_x2 复制栈顶部一个字长的内容，然后将复制内容及原来弹出的三个字长的内容压入栈")]),_._v(" "),l("li",[_._v("dup2 复制栈顶部两个字长内容")]),_._v(" "),l("li",[_._v("dup2_x1 复制栈顶部两个字长的内容，然后将复制内容及原来弹出的三个字长的内容压入栈")]),_._v(" "),l("li",[_._v("dup2_x2 复制栈顶部两个字长的内容，然后将复制内容及原来弹出的四个字长的内容压入栈")]),_._v(" "),l("li",[_._v("swap 交换栈顶部两个字长内容")])]),_._v(" "),l("h2",{attrs:{id:"二、类型转换"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#二、类型转换"}},[_._v("#")]),_._v(" 二、类型转换")]),_._v(" "),l("ul",[l("li",[_._v("i2l 把int类型的数据转化为long类型")]),_._v(" "),l("li",[_._v("i2f 把int类型的数据转化为float类型")]),_._v(" "),l("li",[_._v("i2d 把int类型的数据转化为double类型")]),_._v(" "),l("li",[_._v("l2i 把long类型的数据转化为int类型")]),_._v(" "),l("li",[_._v("l2f 把long类型的数据转化为float类型")]),_._v(" "),l("li",[_._v("l2d 把long类型的数据转化为double类型")]),_._v(" "),l("li",[_._v("f2i 把float类型的数据转化为int类型")]),_._v(" "),l("li",[_._v("f2l 把float类型的数据转化为long类型")]),_._v(" "),l("li",[_._v("f2d 把float类型的数据转化为double类型")]),_._v(" "),l("li",[_._v("d2i 把double类型的数据转化为int类型")]),_._v(" "),l("li",[_._v("d2l 把double类型的数据转化为long类型")]),_._v(" "),l("li",[_._v("d2f 把double类型的数据转化为float类型")]),_._v(" "),l("li",[_._v("i2b 把int类型的数据转化为byte类型")]),_._v(" "),l("li",[_._v("i2c 把int类型的数据转化为char类型")]),_._v(" "),l("li",[_._v("i2s 把int类型的数据转化为short类型")])]),_._v(" "),l("h2",{attrs:{id:"三、运算"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#三、运算"}},[_._v("#")]),_._v(" 三、运算")]),_._v(" "),l("h3",{attrs:{id:"整数运算"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#整数运算"}},[_._v("#")]),_._v(" 整数运算")]),_._v(" "),l("ul",[l("li",[_._v("iadd 执行int类型的加法")]),_._v(" "),l("li",[_._v("ladd 执行long类型的加法")]),_._v(" "),l("li",[_._v("isub 执行int类型的减法")]),_._v(" "),l("li",[_._v("lsub 执行long类型的减法")]),_._v(" "),l("li",[_._v("imul 执行int类型的乘法")]),_._v(" "),l("li",[_._v("lmul 执行long类型的乘法")]),_._v(" "),l("li",[_._v("idiv 执行int类型的除法")]),_._v(" "),l("li",[_._v("ldiv 执行long类型的除法")]),_._v(" "),l("li",[_._v("irem 计算int类型除法的余数")]),_._v(" "),l("li",[_._v("lrem 计算long类型除法的余数")]),_._v(" "),l("li",[_._v("ineg 对一个int类型值进行取反操作")]),_._v(" "),l("li",[_._v("lneg 对一个long类型值进行取反操作")]),_._v(" "),l("li",[_._v("iinc 把一个常量值加到一个int类型的局部变量上")])]),_._v(" "),l("h3",{attrs:{id:"浮点运算"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#浮点运算"}},[_._v("#")]),_._v(" 浮点运算")]),_._v(" "),l("ul",[l("li",[_._v("fadd 执行float类型的加法")]),_._v(" "),l("li",[_._v("dadd 执行double类型的加法")]),_._v(" "),l("li",[_._v("fsub 执行float类型的减法")]),_._v(" "),l("li",[_._v("dsub 执行double类型的减法")]),_._v(" "),l("li",[_._v("fmul 执行float类型的乘法")]),_._v(" "),l("li",[_._v("dmul 执行double类型的乘法")]),_._v(" "),l("li",[_._v("fdiv 执行float类型的除法")]),_._v(" "),l("li",[_._v("ddiv 执行double类型的除法")]),_._v(" "),l("li",[_._v("frem 计算float类型除法的余数")]),_._v(" "),l("li",[_._v("drem 计算double类型除法的余数")]),_._v(" "),l("li",[_._v("fneg 将一个float类型的数值取反")]),_._v(" "),l("li",[_._v("dneg 将一个double类型的数值取反")])]),_._v(" "),l("h2",{attrs:{id:"四、逻辑运算"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#四、逻辑运算"}},[_._v("#")]),_._v(" 四、逻辑运算")]),_._v(" "),l("h3",{attrs:{id:"移位操作"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#移位操作"}},[_._v("#")]),_._v(" 移位操作")]),_._v(" "),l("ul",[l("li",[_._v("ishl 执行int类型的向左移位操作")]),_._v(" "),l("li",[_._v("lshl 执行long类型的向左移位操作")]),_._v(" "),l("li",[_._v("ishr 执行int类型的向右移位操作")]),_._v(" "),l("li",[_._v("lshr 执行long类型的向右移位操作")]),_._v(" "),l("li",[_._v("iushr 执行int类型的向右逻辑移位操作")]),_._v(" "),l("li",[_._v("lushr 执行long类型的向右逻辑移位操作")])]),_._v(" "),l("h3",{attrs:{id:"按位布尔运算"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#按位布尔运算"}},[_._v("#")]),_._v(" 按位布尔运算")]),_._v(" "),l("ul",[l("li",[_._v("iand 对int类型值进行“逻辑与”操作")]),_._v(" "),l("li",[_._v("land 对long类型值进行“逻辑与”操作")]),_._v(" "),l("li",[_._v("ior 对int类型值进行“逻辑或”操作")]),_._v(" "),l("li",[_._v("lor 对long类型值进行“逻辑或”操作")]),_._v(" "),l("li",[_._v("ixor 对int类型值进行“逻辑异或”操作")]),_._v(" "),l("li",[_._v("lxor 对long类型值进行“逻辑异或”操作")])]),_._v(" "),l("h2",{attrs:{id:"五、对象和数组"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#五、对象和数组"}},[_._v("#")]),_._v(" 五、对象和数组")]),_._v(" "),l("h3",{attrs:{id:"对象操作指令"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#对象操作指令"}},[_._v("#")]),_._v(" 对象操作指令")]),_._v(" "),l("ul",[l("li",[_._v("new 创建一个新对象")]),_._v(" "),l("li",[_._v("checkcast 确定对象为所给定的类型。后跟目标类，判断栈顶元素是否为目标类 / 接口的实例。如果不是便抛出异常")]),_._v(" "),l("li",[_._v("getfield 从对象中获取字段")]),_._v(" "),l("li",[_._v("putfield 设置对象中字段的值")]),_._v(" "),l("li",[_._v("getstatic 从类中获取静态字段")]),_._v(" "),l("li",[_._v("putstatic 设置类中静态字段的值")]),_._v(" "),l("li",[_._v("instanceof 判断对象是否为给定的类型。后跟目标类，判断栈顶元素是否为目标类 / 接口的实例。是则压入 1，否则压入 0")])]),_._v(" "),l("h3",{attrs:{id:"数组操作指令"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#数组操作指令"}},[_._v("#")]),_._v(" 数组操作指令")]),_._v(" "),l("ul",[l("li",[_._v("newarray 分配数据成员类型为基本上数据类型的新数组")]),_._v(" "),l("li",[_._v("anewarray 分配数据成员类型为引用类型的新数组")]),_._v(" "),l("li",[_._v("arraylength 获取数组长度")]),_._v(" "),l("li",[_._v("multianewarray 分配新的多维数组")])]),_._v(" "),l("h2",{attrs:{id:"六、控制流"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#六、控制流"}},[_._v("#")]),_._v(" 六、控制流")]),_._v(" "),l("h3",{attrs:{id:"条件分支指令"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#条件分支指令"}},[_._v("#")]),_._v(" 条件分支指令")]),_._v(" "),l("ul",[l("li",[_._v("ifeq 如果等于0，则跳转")]),_._v(" "),l("li",[_._v("ifne 如果不等于0，则跳转")]),_._v(" "),l("li",[_._v("iflt 如果小于0，则跳转")]),_._v(" "),l("li",[_._v("ifge 如果大于等于0，则跳转")]),_._v(" "),l("li",[_._v("ifgt 如果大于0，则跳转")]),_._v(" "),l("li",[_._v("ifle 如果小于等于0，则跳转")]),_._v(" "),l("li",[_._v("if_icmpcq 如果两个int值相等，则跳转")]),_._v(" "),l("li",[_._v("if_icmpne 如果两个int类型值不相等，则跳转")]),_._v(" "),l("li",[_._v("if_icmplt 如果一个int类型值小于另外一个int类型值，则跳转")]),_._v(" "),l("li",[_._v("if_icmpge 如果一个int类型值大于或者等于另外一个int类型值，则跳转")]),_._v(" "),l("li",[_._v("if_icmpgt 如果一个int类型值大于另外一个int类型值，则跳转")]),_._v(" "),l("li",[_._v("if_icmple 如果一个int类型值小于或者等于另外一个int类型值，则跳转")]),_._v(" "),l("li",[_._v("ifnull 如果等于null，则跳转")]),_._v(" "),l("li",[_._v("ifnonnull 如果不等于null，则跳转")]),_._v(" "),l("li",[_._v("if_acmpeq 如果两个对象引用相等，则跳转")]),_._v(" "),l("li",[_._v("if_acmpnc 如果两个对象引用不相等，则跳转")])]),_._v(" "),l("h3",{attrs:{id:"比较指令"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#比较指令"}},[_._v("#")]),_._v(" 比较指令")]),_._v(" "),l("ul",[l("li",[_._v("lcmp 比较long类型值")]),_._v(" "),l("li",[_._v("fcmpl 比较float类型值（当遇到NaN时，返回-1）")]),_._v(" "),l("li",[_._v("fcmpg 比较float类型值（当遇到NaN时，返回1）")]),_._v(" "),l("li",[_._v("dcmpl 比较double类型值（当遇到NaN时，返回-1）")]),_._v(" "),l("li",[_._v("dcmpg 比较double类型值（当遇到NaN时，返回1）")])]),_._v(" "),l("h3",{attrs:{id:"无条件转移指令"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#无条件转移指令"}},[_._v("#")]),_._v(" 无条件转移指令")]),_._v(" "),l("ul",[l("li",[_._v("goto 无条件跳转")]),_._v(" "),l("li",[_._v("goto_w 无条件跳转（宽索引）")])]),_._v(" "),l("h3",{attrs:{id:"表跳转指令"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#表跳转指令"}},[_._v("#")]),_._v(" 表跳转指令")]),_._v(" "),l("ul",[l("li",[_._v("tableswitch 通过索引访问跳转表，并跳转")]),_._v(" "),l("li",[_._v("lookupswitch 通过键值匹配访问跳转表，并执行跳转操作")])]),_._v(" "),l("h3",{attrs:{id:"异常"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#异常"}},[_._v("#")]),_._v(" 异常")]),_._v(" "),l("ul",[l("li",[_._v("athrow 抛出异常或错误。将栈顶异常抛出")]),_._v(" "),l("li",[_._v("finally子句")]),_._v(" "),l("li",[_._v("jsr 跳转到子例程")]),_._v(" "),l("li",[_._v("jsr_w 跳转到子例程（宽索引）")]),_._v(" "),l("li",[_._v("rct 从子例程返回")])]),_._v(" "),l("h2",{attrs:{id:"七、方法调用与返回"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#七、方法调用与返回"}},[_._v("#")]),_._v(" 七、方法调用与返回")]),_._v(" "),l("h3",{attrs:{id:"方法调用指令"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#方法调用指令"}},[_._v("#")]),_._v(" 方法调用指令")]),_._v(" "),l("ul",[l("li",[_._v("invokcvirtual 运行时按照对象的类来调用实例方法")]),_._v(" "),l("li",[_._v("invokespecial 根据编译时类型来调用实例方法")]),_._v(" "),l("li",[_._v("invokestatic 调用类（静态）方法")]),_._v(" "),l("li",[_._v("invokcinterface 调用接口方法")])]),_._v(" "),l("h3",{attrs:{id:"方法返回指令"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#方法返回指令"}},[_._v("#")]),_._v(" 方法返回指令")]),_._v(" "),l("ul",[l("li",[_._v("ireturn 从方法中返回int类型的数据")]),_._v(" "),l("li",[_._v("lreturn 从方法中返回long类型的数据")]),_._v(" "),l("li",[_._v("freturn 从方法中返回float类型的数据")]),_._v(" "),l("li",[_._v("dreturn 从方法中返回double类型的数据")]),_._v(" "),l("li",[_._v("areturn 从方法中返回引用类型的数据")]),_._v(" "),l("li",[_._v("return 从方法中返回，返回值为void")])]),_._v(" "),l("h3",{attrs:{id:"线程同步"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#线程同步"}},[_._v("#")]),_._v(" 线程同步")]),_._v(" "),l("ul",[l("li",[_._v("montiorenter 进入并获取对象监视器。即：为栈顶对象加锁")]),_._v(" "),l("li",[_._v("monitorexit 释放并退出对象监视器。即：为栈顶对象解锁")])]),_._v(" "),l("h2",{attrs:{id:"八、jvm指令助记符"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#八、jvm指令助记符"}},[_._v("#")]),_._v(" 八、JVM指令助记符")]),_._v(" "),l("ul",[l("li",[_._v("变量到操作数栈：iload,iload_,lload,lload_,fload,fload_,dload,dload_,aload,aload_")]),_._v(" "),l("li",[_._v("操作数栈到变量：istore,istore_,lstore,lstore_,fstore,fstore_,dstore,dstor_,astore,astore_")]),_._v(" "),l("li",[_._v("常数到操作数栈：bipush,sipush,ldc,ldc_w,ldc2_w,aconst_null,iconst_ml,iconst_,lconst_,fconst_,dconst_")]),_._v(" "),l("li",[_._v("加：iadd,ladd,fadd,dadd")]),_._v(" "),l("li",[_._v("减：isub,lsub,fsub,dsub")]),_._v(" "),l("li",[_._v("乘：imul,lmul,fmul,dmul")]),_._v(" "),l("li",[_._v("除：idiv,ldiv,fdiv,ddiv")]),_._v(" "),l("li",[_._v("余数：irem,lrem,frem,drem")]),_._v(" "),l("li",[_._v("取负：ineg,lneg,fneg,dneg")]),_._v(" "),l("li",[_._v("移位：ishl,lshr,iushr,lshl,lshr,lushr")]),_._v(" "),l("li",[_._v("按位或：ior,lor")]),_._v(" "),l("li",[_._v("按位与：iand,land")]),_._v(" "),l("li",[_._v("按位异或：ixor,lxor")]),_._v(" "),l("li",[_._v("类型转换：\n"),l("ul",[l("li",[_._v("i2l,i2f,i2d,l2f,l2d,f2d(放宽数值转换)")]),_._v(" "),l("li",[_._v("i2b,i2c,i2s,l2i,f2i,f2l,d2i,d2l,d2f(缩窄数值转换)")])])]),_._v(" "),l("li",[_._v("创建类实便：new")]),_._v(" "),l("li",[_._v("创建新数组：newarray,anewarray,multianwarray")]),_._v(" "),l("li",[_._v("访问类的域和类实例域：getfield,putfield,getstatic,putstatic")]),_._v(" "),l("li",[_._v("把数据装载到操作数栈：baload,caload,saload,iaload,laload,faload,daload,aaload")]),_._v(" "),l("li",[_._v("从操作数栈存存储到数组：bastore,castore,sastore,iastore,lastore,fastore,dastore,aastore")]),_._v(" "),l("li",[_._v("获取数组长度：arraylength")]),_._v(" "),l("li",[_._v("检相类实例或数组属性：instanceof,checkcast")]),_._v(" "),l("li",[_._v("操作数栈管理：pop,pop2,dup,dup2,dup_xl,dup2_xl,dup_x2,dup2_x2,swap")]),_._v(" "),l("li",[_._v("有条件转移：ifeq,iflt,ifle,ifne,ifgt,ifge,ifnull,ifnonnull,if_icmpeq,if_icmpene,if_icmplt,if_icmpgt,if_icmple,if_icmpge,if_acmpeq,if_acmpne,lcmp,fcmpl, fcmpg,dcmpl,dcmpg")]),_._v(" "),l("li",[_._v("复合条件转移：tableswitch,lookupswitch")]),_._v(" "),l("li",[_._v("无条件转移：goto,goto_w,jsr,jsr_w,ret")]),_._v(" "),l("li",[_._v("调度对象的实便方法：invokevirtual")]),_._v(" "),l("li",[_._v("调用由接口实现的方法：invokeinterface")]),_._v(" "),l("li",[_._v("调用需要特殊处理的实例方法：invokespecial")]),_._v(" "),l("li",[_._v("调用命名类中的静态方法：invokestatic")]),_._v(" "),l("li",[_._v("方法返回：ireturn,lreturn,freturn,dreturn,areturn,return")]),_._v(" "),l("li",[_._v("异常：athrow")]),_._v(" "),l("li",[_._v("finally关键字的实现使用：jsr,jsr_w,ret")])]),_._v(" "),l("h2",{attrs:{id:"参考资料"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[_._v("#")]),_._v(" 参考资料")]),_._v(" "),l("p",[_._v("[JVM指令手册] "),l("a",{attrs:{href:"https://github.com/whitestarrain/java_study_note/blob/master/source/MAIN_NOTE/JVM%E6%8C%87%E4%BB%A4%E6%89%8B%E5%86%8C.md",target:"_blank",rel:"noopener noreferrer"}},[_._v("https://github.com/whitestarrain/java_study_note/blob/master/source/MAIN_NOTE/JVM指令手册.md"),l("OutboundLink")],1)])])}),[],!1,null,null,null);l.default=t.exports}}]);